@page "/table/create"


@attribute [Authorize]
@rendermode InteractiveServer
@inject IWebHostEnvironment Env
@inject IConfiguration configuartion
@inject HttpClient http
@inject IJSRuntime JsRuntime
@inject IApiService ApiService
@inject IConfiguration configuaration
@inject NavigationManager navigationManager
@inject IHttpContextAccessor HttpContextAcessor
@inject UserManager<ApplicationUser> UserManager

<h3>Adicionar Mesa</h3>

<EditForm OnValidSubmit="OnSubmit" Model="@Model" FormName="addTable">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="mb-3">
        <label class="form-label">Identificação:</label>
        <InputText @bind-Value="Model.Identification" class="form-control" />
    </div>
    <button type="submit" class="btn btn-primary">Enviar</button>
</EditForm>

@code {
    public TableDTO Model { get; set; } = new TableDTO();
    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }
    private ClaimsPrincipal CurrentUser;
    private ApplicationUser user = default!;
    private int _companyId;

    private async void OnSubmit()
    {
        var url = configuartion["ApiLinks:TableCreate"];
        Model.CompanyId = _companyId;
        Model.Unique = Guid.NewGuid();
        Model.Link = string.Empty;
        GenericCommandResult commandResult = await ApiService.PostAsJsonAsync<TableDTO>(url, HttpContextAcessor.HttpContext.Request.Cookies["Token"].ToString(), Model);
        if (commandResult.Sucess)
        {
            await JsRuntime.InvokeVoidAsync("alert", "Mesa cadastrada");
            navigationManager.NavigateTo(configuaration["ApplicationLinks:TableManager"]);
        }
        else
            await JsRuntime.InvokeVoidAsync("alert", "Ocorreu um erro, mesa não cadastrada");
    }
    protected override async Task OnInitializedAsync()
    {
        CurrentUser = (await authenticationStateTask).User;

        if (CurrentUser.Identity.IsAuthenticated)
        {
            user = await UserManager.GetUserAsync(CurrentUser);
            _companyId = user.CompanyId;
        }
    }
}

