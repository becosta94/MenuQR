@page "/product/manager"
@inject HttpClient http
@inject IConfiguration configuartion
@rendermode InteractiveServer
@inject IJSRuntime JsRuntime

<h3>ProductManager</h3>
<a href="/product/add/" class="btn btn-primary">Adicionar</a>
@if (Products.Count == 0)
{
    <table class="table">
        <thead>
            <tr>
                <th>Imagem</th>
                <th>Nome</th>
                <th>Preço</th>
                <th>Descrição</th>
                <th>Ativo</th>
                <th>Editar</th>
            </tr>
        </thead>
    </table>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Imagem</th>
                <th>Nome</th>
                <th>Preço</th>
                <th>Descrição</th>
                <th>Ativo</th>
                <th>Editar</th>
            </tr>
        </thead>
        <tbody>
            @foreach (Product product in Products)
            {
                <tr>
                    <td class="align-middle">
                        <img src="@string.Format("data:image/png;base64, {0}", product.Image)" width="100" height="100" />
                    </td>
                    <td class="align-middle" scope="row">@product.Name</td>
                    <td class="align-middle">@product.Price</td>
                    <td class="align-middle">@product.Description</td>
                    <td class="align-middle">
                        <div class="form-check form-switch">
                            @if (product.Active)
                            {
                                <InputCheckbox @bind-Value="product.Active" @onclick="(args) => ToggleActivity(product.Id)" class="form-check-input" type="checkbox" checked="checked" id="flexSwitchCheckDefault" />
                            }
                            else
                            {
                                <InputCheckbox @bind-Value="product.Active" @onclick="(args) => ToggleActivity(product.Id)" class="form-check-input" type="checkbox" id="flexSwitchCheckDefault" />
                            }

                        </div>
                    </td>
                    <td class="align-middle">
                        <a href="/productmanager/edit/@product.Id" class="btn btn-primary">Editar</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
@code {
        List<Product> Products { get; set; } = new List<Product>();

    protected override async Task OnInitializedAsync()
    {
        var url = configuartion["ApiLinks:ProductGetAll"];
        List<Product>? productsApi = await http.GetFromJsonAsync<List<Product>>(url);
        if (productsApi is not null)
            Products = productsApi;
    }
    public async void ToggleActivity(int id)
    {
        var url = configuartion["ApiLinks:ToggleActivity"];
        var productsApi = await http.PutAsync(url + $"productId={id}", null);
        if (!productsApi.IsSuccessStatusCode)
            await JsRuntime.InvokeVoidAsync("Alert", "Produto não alterado!");
    }

}
